ifndef EGEN_LOGGER_MAKEFILE_INCLUDED
EGEN_LOGGER_MAKEFILE_INCLUDED := true

#
# EGenLogger Library Makefile - Include File
#
# This file is used to build the EGenLogger Library. It is intended to
# be included in another makefile that provides the required infrastructure
# as outlined below.
#

################################################################################
#
# Required Infrastructure
#
# EGenLogger_ROOT	:=	{relative location of EGenLogger directory}
#				NOTE: based on directory where the including 
#				makefile is located
#
# CXX			:=	{your C++ compiler}
# CPPFLAGS		:=	{your C PreProcessor flags}
# DEPFLAGS		:=	{your flag to generate dependency info}
# CXXFLAGS		:=	{your C++ compiler flags}
# LDFLAGS		:=	{your linker flags}
# AR			:=	{your archive/library maintainer}
# ARFLAGS		:=	{your archiver flags}
# RM			:=	{your command to remove a file}
#
################################################################################

#
# PORTABILITY NOTES
# This project makes use of "standardized" printf/scanf format specifiers
# and constant declaration macros which are typically defined in
# <inttypes.h> on Un*x-like platforms.  In order to get this project to
# compile on some platforms, it may be neccessary to set one (or
# both) of -D__STDC_FORMAT_MACROS and -D__STDC_CONSTANT_MACROS.
#

#
# Project layout
#
EGenLogger_PRJ	:= $(EGenLogger_ROOT)/prj
EGenLogger_INC	:= $(EGenLogger_ROOT)/inc
EGenLogger_SRC	:= $(EGenLogger_ROOT)/src
EGenLogger_OBJ	:= $(EGenLogger_ROOT)/obj
EGenLogger_LIB	:= $(EGenLogger_ROOT)/lib
EGenLogger_BIN	:= $(EGenLogger_ROOT)/bin

#
# File-type based search paths
#
vpath	%.h	$(EGenLogger_INC)
vpath	%.cpp	$(EGenLogger_SRC)
vpath	%.o	$(EGenLogger_OBJ)
vpath	%.d	$(EGenLogger_OBJ)
vpath	%.a	$(EGenLogger_LIB)

#
# Project components
#
EGenLoggerSrcsNames	:=	\
				BaseLogger.cpp \
				EGenLogFormatterTab.cpp

EGenLoggerSrcs	:=	$(addprefix \
				$(EGenLogger_SRC)/, \
				$(EGenLoggerSrcsNames))

EGenLoggerDepsNames	:=	$(EGenLoggerSrcsNames:.cpp=.d)

EGenLoggerDeps	:=	$(addprefix \
				$(EGenLogger_OBJ)/, \
				$(EGenLoggerDepsNames))

EGenLoggerObjsNames	:=	$(EGenLoggerSrcsNames:.cpp=.o)

EGenLoggerObjs	:=	$(addprefix \
				$(EGenLogger_OBJ)/, \
				$(EGenLoggerObjsNames))

EGenLoggerLibName	:=	EGenLogger

EGenLoggerLib	:=	$(addprefix \
				$(EGenLogger_LIB)/lib, \
				$(EGenLoggerLibName).a)

EGenLoggerAll	:=	$(EGenLoggerTargetModifier)all
EGenLoggerClean	:=	$(EGenLoggerTargetModifier)clean

#
# Automatically track dependencies
#
$(EGenLogger_OBJ)/%.d : $(EGenLogger_SRC)/%.cpp
	@set -e; rm -f $@; \
	(cd $(EGenLogger_PRJ); \
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) ../src/$(notdir $<) \
		-I $(EGenLogger_INC) \
		> ../obj/$(notdir $@).$$$$; \
	); \
	sed 's,\($(basename $(notdir $*))\).o[ :]*,\1.o $(notdir $@) : ,g' \
		< $@.$$$$ > $@; \
	rm -f $@.$$$$; \
	echo -e \\t$$\(CXX\) -c $$\(CPPFLAGS\) $$\(CXXFLAGS\) \
		-I $$\(EGenLogger_INC\) \
		$$\< -o $$\(EGenLogger_OBJ\)/\$$\@ >> $@

#
# Default goal
#
$(EGenLoggerAll)	:	$(EGenLoggerLib)

#
# Library targets
#
EGenLoggerLib	:	$(EGenLoggerLib)

$(EGenLoggerLib)	: \
					EGenUtilitiesLib \
					$(EGenLoggerObjsNames)
	$(AR) $(ARFLAGS) \
		$(EGenLoggerLib) $(EGenLoggerObjs)

#
# Utility targets
#
$(EGenLoggerClean) :
	$(RM) $(EGenLoggerDeps); \
	$(RM) $(EGenLoggerObjs); \
	$(RM) $(EGenLoggerLib)

#
# Dependency and object targets
#
include $(EGenLoggerDeps)

endif #EGEN_LOGGER_MAKEFILE_INCLUDED
