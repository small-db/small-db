ifndef EGEN_FLAT_FILE_LOADER_MAKEFILE_INCLUDED
EGEN_FLAT_FILE_LOADER_MAKEFILE_INCLUDED := true

#
# EGenFlatFileLoader Library Makefile - Include File
#
# This file is used to build the EGenFlatFileLoader Library. It is intended to
# be included in another makefile that provides the required infrastructure
# as outlined below.
#

################################################################################
#
# Required Infrastructure
#
# EGenFlatFileLoader_ROOT	:=	{relative location of EGenFlatFileLoader directory}
#				NOTE: based on directory where the including 
#				makefile is located
#
# CXX			:=	{your C++ compiler}
# CPPFLAGS		:=	{your C PreProcessor flags}
# DEPFLAGS		:=	{your flag to generate dependency info}
# CXXFLAGS		:=	{your C++ compiler flags}
# LDFLAGS		:=	{your linker flags}
# AR			:=	{your archive/library maintainer}
# ARFLAGS		:=	{your archiver flags}
# RM			:=	{your command to remove a file}
#
################################################################################

#
# PORTABILITY NOTES
# This project makes use of "standardized" printf/scanf format specifiers
# and constant declaration macros which are typically defined in
# <inttypes.h> on Un*x-like platforms.  In order to get this project to
# compile on some platforms, it may be neccessary to set one (or
# both) of -D__STDC_FORMAT_MACROS and -D__STDC_CONSTANT_MACROS.
#

#
# Project layout
#
EGenFlatFileLoader_PRJ	:= $(EGenFlatFileLoader_ROOT)/prj
EGenFlatFileLoader_INC	:= $(EGenFlatFileLoader_ROOT)/inc
EGenFlatFileLoader_SRC	:= $(EGenFlatFileLoader_ROOT)/src
EGenFlatFileLoader_OBJ	:= $(EGenFlatFileLoader_ROOT)/obj
EGenFlatFileLoader_LIB	:= $(EGenFlatFileLoader_ROOT)/lib
EGenFlatFileLoader_BIN	:= $(EGenFlatFileLoader_ROOT)/bin

#
# File-type based search paths
#
vpath	%.h	$(EGenFlatFileLoader_INC)
vpath	%.cpp	$(EGenFlatFileLoader_SRC)
vpath	%.o	$(EGenFlatFileLoader_OBJ)
vpath	%.d	$(EGenFlatFileLoader_OBJ)
vpath	%.a	$(EGenFlatFileLoader_LIB)

#
# Project components
#
EGenFlatFileLoaderSrcsNames	:=	\
				FlatFileLoader.cpp

EGenFlatFileLoaderSrcs	:=	$(addprefix \
				$(EGenFlatFileLoader_SRC)/, \
				$(EGenFlatFileLoaderSrcsNames))

EGenFlatFileLoaderDepsNames	:=	$(EGenFlatFileLoaderSrcsNames:.cpp=.d)

EGenFlatFileLoaderDeps	:=	$(addprefix \
				$(EGenFlatFileLoader_OBJ)/, \
				$(EGenFlatFileLoaderDepsNames))

EGenFlatFileLoaderObjsNames	:=	$(EGenFlatFileLoaderSrcsNames:.cpp=.o)

EGenFlatFileLoaderObjs	:=	$(addprefix \
				$(EGenFlatFileLoader_OBJ)/, \
				$(EGenFlatFileLoaderObjsNames))

EGenFlatFileLoaderLibName	:=	EGenFlatFileLoader

EGenFlatFileLoaderLib	:=	$(addprefix \
				$(EGenFlatFileLoader_LIB)/lib, \
				$(EGenFlatFileLoaderLibName).a)

EGenFlatFileLoaderAll	:=	$(EGenFlatFileLoaderTargetModifier)all
EGenFlatFileLoaderClean	:=	$(EGenFlatFileLoaderTargetModifier)clean

#
# Automatically track dependencies
#
$(EGenFlatFileLoader_OBJ)/%.d : $(EGenFlatFileLoader_SRC)/%.cpp
	@set -e; rm -f $@; \
	(cd $(EGenFlatFileLoader_PRJ); \
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) ../src/$(notdir $<) \
		-I $(EGenFlatFileLoader_INC) \
		> ../obj/$(notdir $@).$$$$; \
	); \
	sed 's,\($(basename $(notdir $*))\).o[ :]*,\1.o $(notdir $@) : ,g' \
		< $@.$$$$ > $@; \
	rm -f $@.$$$$; \
	echo -e \\t$$\(CXX\) -c $$\(CPPFLAGS\) $$\(CXXFLAGS\) \
		-I $$\(EGenFlatFileLoader_INC\) \
		$$\< -o $$\(EGenFlatFileLoader_OBJ\)/\$$\@ >> $@

#
# Default goal
#
$(EGenFlatFileLoaderAll)	:	$(EGenFlatFileLoaderLib)

#
# Library targets
#
EGenFlatFileLoaderLib	:	$(EGenFlatFileLoaderLib)

$(EGenFlatFileLoaderLib)	: \
							EGenUtilitiesLib \
							EGenInputFilesLib \
							EGenLoggerLib \
							EGenTablesLib \
							$(EGenFlatFileLoaderObjsNames)
	$(AR) $(ARFLAGS) \
		$(EGenFlatFileLoaderLib) $(EGenFlatFileLoaderObjs)

#
# Utility targets
#
$(EGenFlatFileLoaderClean) :
	$(RM) $(EGenFlatFileLoaderDeps); \
	$(RM) $(EGenFlatFileLoaderObjs); \
	$(RM) $(EGenFlatFileLoaderLib)

#
# Dependency and object targets
#
include $(EGenFlatFileLoaderDeps)

endif #EGEN_FLAT_FILE_LOADER_MAKEFILE_INCLUDED
