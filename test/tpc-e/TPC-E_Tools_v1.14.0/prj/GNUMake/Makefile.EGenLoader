ifndef EGEN_LOADER_MAKEFILE_INCLUDED
EGEN_LOADER_MAKEFILE_INCLUDED := true

#
# EGenLoader Makefile - Include File
#
# This file is used to build EGenLoader. It is intended to
# be included in another makefile that provides the required infrastructure
# as outlined below.
#

################################################################################
#
# Required Infrastructure
#
# EGenLoader_ROOT	:=	{relative location of EGenLoader directory}
#				NOTE: based on directory where the including 
#				makefile is located
#
# CXX			:=	{your C++ compiler}
# CPPFLAGS		:=	{your C PreProcessor flags}
# DEPFLAGS		:=	{your flag to generate dependency info}
# CXXFLAGS		:=	{your C++ compiler flags}
# LDFLAGS		:=	{your linker flags}
# AR			:=	{your archive/library maintainer}
# ARFLAGS		:=	{your archiver flags}
# RM			:=	{your command to remove a file}
#
################################################################################

#
# PORTABILITY NOTES
# This project makes use of "standardized" printf/scanf format specifiers
# and constant declaration macros which are typically defined in
# <inttypes.h> on Un*x-like platforms.  In order to get this project to
# compile on some platforms, it may be neccessary to set one (or
# both) of -D__STDC_FORMAT_MACROS and -D__STDC_CONSTANT_MACROS.
#

#
# Project layout
#
EGenLoader_PRJ	:= $(EGenLoader_ROOT)/prj
EGenLoader_INC	:= $(EGenLoader_ROOT)/inc
EGenLoader_SRC	:= $(EGenLoader_ROOT)/src
EGenLoader_OBJ	:= $(EGenLoader_ROOT)/obj
EGenLoader_LIB	:= $(EGenLoader_ROOT)/lib
EGenLoader_BIN	:= $(EGenLoader_ROOT)/bin

#
# File-type based search paths
#
vpath	%.h	$(EGenLoader_INC)
vpath	%.cpp	$(EGenLoader_SRC)
vpath	%.o	$(EGenLoader_OBJ)
vpath	%.d	$(EGenLoader_OBJ)
vpath	%.a	$(EGenLoader_LIB)

#
# Project components
#
EGenLoaderSrcsNames	:=	\
				EGenLoader.cpp

EGenLoaderSrcs	:=	$(addprefix \
				$(EGenLoader_SRC)/, \
				$(EGenLoaderSrcsNames))

EGenLoaderDepsNames	:=	$(EGenLoaderSrcsNames:.cpp=.d)

EGenLoaderDeps	:=	$(addprefix \
				$(EGenLoader_OBJ)/, \
				$(EGenLoaderDepsNames))

EGenLoaderObjsNames	:=	$(EGenLoaderSrcsNames:.cpp=.o)

EGenLoaderObjs	:=	$(addprefix \
				$(EGenLoader_OBJ)/, \
				$(EGenLoaderObjsNames))

EGenLoaderBinName	:=	EGenLoader

EGenLoaderBin	:=	$(addprefix \
				$(EGenLoader_BIN)/, \
				$(EGenLoaderBinName))

EGenLoaderAll	:=	$(EGenLoaderTargetModifier)all
EGenLoaderClean	:=	$(EGenLoaderTargetModifier)clean

#
# Automatically track dependencies
#
$(EGenLoader_OBJ)/%.d : $(EGenLoader_SRC)/%.cpp
	@set -e; rm -f $@; \
	(cd $(EGenLoader_PRJ); \
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) ../src/$(notdir $<) \
		-I $(EGenLoader_INC) \
		> ../obj/$(notdir $@).$$$$; \
	); \
	sed 's,\($(basename $(notdir $*))\).o[ :]*,\1.o $(notdir $@) : ,g' \
		< $@.$$$$ > $@; \
	rm -f $@.$$$$; \
	echo -e \\t$$\(CXX\) -c $$\(CPPFLAGS\) $$\(CXXFLAGS\) \
		-I $$\(EGenLoader_INC\) \
		$$\< -o $$\(EGenLoader_OBJ\)/\$$\@ >> $@

#
# Default goal
#
$(EGenLoaderAll)	:	$(EGenLoaderBin)

#
# Binary targets
#
EGenLoaderBin	:	$(EGenLoaderBin)

$(EGenLoaderBin)	: \
					EGenUtilitiesLib \
					EGenInputFilesLib \
					EGenLoggerLib \
					EGenTablesLib \
					EGenGenerateAndLoadLib \
					EGenFlatFileLoaderLib \
					$(EGenLoaderObjsNames)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) \
		-L $(EGenUtilities_LIB) \
		-L $(EGenInputFiles_LIB) \
		-L $(EGenLogger_LIB) \
		-L $(EGenTables_LIB) \
		-L $(EGenGenerateAndLoad_LIB) \
		-L $(EGenFlatFileLoader_LIB) \
		$(EGenLoaderObjs) \
		-l$(EGenFlatFileLoaderLibName) \
		-l$(EGenGenerateAndLoadLibName) \
		-l$(EGenTablesLibName) \
		-l$(EGenLoggerLibName) \
		-l$(EGenInputFilesLibName) \
		-l$(EGenUtilitiesLibName) \
		-o $@
#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) \
#		$(EGenUtilitiesObjs) \
#		$(EGenInputFilesObjs) \
#		$(EGenLoggerObjs) \
#		$(EGenTablesObjs) \
#		$(EGenGenerateAndLoadObjs) \
#		$(EGenFlatFileLoaderObjs) \
#		$(EGenLoaderObjs) \
#		-o $@

#
# Utility targets
#
$(EGenLoaderClean) :
	$(RM) $(EGenLoaderDeps); \
	$(RM) $(EGenLoaderObjs); \
	$(RM) $(EGenLoaderBin)

#
# Dependency and object targets
#
include $(EGenLoaderDeps)

endif #EGEN_LOADER_MAKEFILE_INCLUDED
