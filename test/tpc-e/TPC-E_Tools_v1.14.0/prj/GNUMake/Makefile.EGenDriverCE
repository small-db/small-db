ifndef EGEN_DRIVER_CE_MAKEFILE_INCLUDED
EGEN_DRIVER_CE_MAKEFILE_INCLUDED := true

#
# EGenDriverCE Library Makefile - Include File
#
# This file is used to build the EGenDriverCE Library. It is intended to
# be included in another makefile that provides the required infrastructure
# as outlined below.
#

################################################################################
#
# Required Infrastructure
#
# EGenDriverCE_ROOT	:=	{relative location of EGenDriverCE directory}
#				NOTE: based on directory where the including 
#				makefile is located
#
# CXX			:=	{your C++ compiler}
# CPPFLAGS		:=	{your C PreProcessor flags}
# DEPFLAGS		:=	{your flag to generate dependency info}
# CXXFLAGS		:=	{your C++ compiler flags}
# LDFLAGS		:=	{your linker flags}
# AR			:=	{your archive/library maintainer}
# ARFLAGS		:=	{your archiver flags}
# RM			:=	{your command to remove a file}
#
################################################################################

#
# PORTABILITY NOTES
# This project makes use of "standardized" printf/scanf format specifiers
# and constant declaration macros which are typically defined in
# <inttypes.h> on Un*x-like platforms.  In order to get this project to
# compile on some platforms, it may be neccessary to set one (or
# both) of -D__STDC_FORMAT_MACROS and -D__STDC_CONSTANT_MACROS.
#

#
# Project layout
#
EGenDriverCE_PRJ	:= $(EGenDriverCE_ROOT)/prj
EGenDriverCE_INC	:= $(EGenDriverCE_ROOT)/inc
EGenDriverCE_SRC	:= $(EGenDriverCE_ROOT)/src
EGenDriverCE_OBJ	:= $(EGenDriverCE_ROOT)/obj
EGenDriverCE_LIB	:= $(EGenDriverCE_ROOT)/lib
EGenDriverCE_BIN	:= $(EGenDriverCE_ROOT)/bin

#
# File-type based search paths
#
vpath	%.h	$(EGenDriverCE_INC)
vpath	%.cpp	$(EGenDriverCE_SRC)
vpath	%.o	$(EGenDriverCE_OBJ)
vpath	%.d	$(EGenDriverCE_OBJ)
vpath	%.a	$(EGenDriverCE_LIB)

#
# Project components
#
EGenDriverCESrcsNames	:=	\
				CE.cpp \
				CETxnInputGenerator.cpp \
				CETxnMixGenerator.cpp

EGenDriverCESrcs	:=	$(addprefix \
				$(EGenDriverCE_SRC)/, \
				$(EGenDriverCESrcsNames))

EGenDriverCEDepsNames	:=	$(EGenDriverCESrcsNames:.cpp=.d)

EGenDriverCEDeps	:=	$(addprefix \
				$(EGenDriverCE_OBJ)/, \
				$(EGenDriverCEDepsNames))

EGenDriverCEObjsNames	:=	$(EGenDriverCESrcsNames:.cpp=.o)

EGenDriverCEObjs	:=	$(addprefix \
				$(EGenDriverCE_OBJ)/, \
				$(EGenDriverCEObjsNames))

EGenDriverCELibName	:=	EGenDriverCE

EGenDriverCELib	:=	$(addprefix \
				$(EGenDriverCE_LIB)/lib, \
				$(EGenDriverCELibName).a)

EGenDriverCEAll	:=	$(EGenDriverCETargetModifier)all
EGenDriverCEClean	:=	$(EGenDriverCETargetModifier)clean

#
# Automatically track dependencies
#
$(EGenDriverCE_OBJ)/%.d : $(EGenDriverCE_SRC)/%.cpp
	@set -e; rm -f $@; \
	(cd $(EGenDriverCE_PRJ); \
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) ../src/$(notdir $<) \
		-I $(EGenDriverCE_INC) \
		> ../obj/$(notdir $@).$$$$; \
	); \
	sed 's,\($(basename $(notdir $*))\).o[ :]*,\1.o $(notdir $@) : ,g' \
		< $@.$$$$ > $@; \
	rm -f $@.$$$$; \
	echo -e \\t$$\(CXX\) -c $$\(CPPFLAGS\) $$\(CXXFLAGS\) \
		-I $$\(EGenDriverCE_INC\) \
		$$\< -o $$\(EGenDriverCE_OBJ\)/\$$\@ >> $@

#
# Default goal
#
$(EGenDriverCEAll)	:	$(EGenDriverCELib)

#
# Library targets
#
EGenDriverCELib	:	$(EGenDriverCELib)

$(EGenDriverCELib)	: \
					EGenUtilitiesLib \
					EGenInputFilesLib \
					EGenLoggerLib \
					EGenTablesLib \
					$(EGenDriverCEObjsNames)
	$(AR) $(ARFLAGS) \
		$(EGenDriverCELib) $(EGenDriverCEObjs)

#
# Utility targets
#
$(EGenDriverCEClean) :
	$(RM) $(EGenDriverCEDeps); \
	$(RM) $(EGenDriverCEObjs); \
	$(RM) $(EGenDriverCELib)

#
# Dependency and object targets
#
include $(EGenDriverCEDeps)

endif #EGEN_DRIVER_CE_MAKEFILE_INCLUDED
