ifndef EGEN_UTILITIES_MAKEFILE_INCLUDED
EGEN_UTILITIES_MAKEFILE_INCLUDED := true

#
# EGenUtilities Library Makefile - Include File
#
# This file is used to build the EGenUtiltities Library. It is intended to
# be included in another makefile that provides the required infrastructure
# as outlined below.
#

################################################################################
#
# Required Infrastructure
#
# EGenUtilities_ROOT	:=	{relative location of Utilities directory}
#				NOTE: based on directory where the including 
#				makefile is located
#
# CXX			:=	{your C++ compiler}
# CPPFLAGS		:=	{your C PreProcessor flags}
# DEPFLAGS		:=	{your flag to generate dependency info}
# CXXFLAGS		:=	{your C++ compiler flags}
# LDFLAGS		:=	{your linker flags}
# AR			:=	{your archive/library maintainer}
# ARFLAGS		:=	{your archiver flags}
# RM			:=	{your command to remove a file}
#
################################################################################

#
# PORTABILITY NOTES
# This project makes use of "standardized" printf/scanf format specifiers
# and constant declaration macros which are typically defined in
# <inttypes.h> on Un*x-like platforms.  In order to get this project to
# compile on some platforms, it may be neccessary to set one (or
# both) of -D__STDC_FORMAT_MACROS and -D__STDC_CONSTANT_MACROS.
#

#
# Project layout
#
EGenUtilities_PRJ	:= $(EGenUtilities_ROOT)/prj
EGenUtilities_INC	:= $(EGenUtilities_ROOT)/inc
EGenUtilities_SRC	:= $(EGenUtilities_ROOT)/src
EGenUtilities_OBJ	:= $(EGenUtilities_ROOT)/obj
EGenUtilities_LIB	:= $(EGenUtilities_ROOT)/lib
EGenUtilities_BIN	:= $(EGenUtilities_ROOT)/bin

#
# File-type based search paths
#
vpath	%.h	$(EGenUtilities_INC)
vpath	%.cpp	$(EGenUtilities_SRC)
vpath	%.o	$(EGenUtilities_OBJ)
vpath	%.d	$(EGenUtilities_OBJ)
vpath	%.a	$(EGenUtilities_LIB)

#
# Project components
#
EGenUtilitiesSrcsNames	:= \
				DateTime.cpp \
				EGenVersion.cpp \
				error.cpp \
				locking.cpp \
				Money.cpp \
				Random.cpp \
				threading.cpp \
				condition.cpp

EGenUtilitiesSrcs	:=	$(addprefix \
				$(EGenUtilities_SRC)/, \
				$(EGenUtilitiesSrcsNames))

EGenUtilitiesDepsNames	:=	$(EGenUtilitiesSrcsNames:.cpp=.d)

EGenUtilitiesDeps	:=	$(addprefix \
				$(EGenUtilities_OBJ)/, \
				$(EGenUtilitiesDepsNames))

EGenUtilitiesObjsNames	:=	$(EGenUtilitiesSrcsNames:.cpp=.o)

EGenUtilitiesObjs	:=	$(addprefix \
				$(EGenUtilities_OBJ)/, \
				$(EGenUtilitiesObjsNames))

EGenUtilitiesLibName	:=	EGenUtilities

EGenUtilitiesLib	:=	$(addprefix \
				$(EGenUtilities_LIB)/lib, \
				$(EGenUtilitiesLibName).a)

EGenUtilitiesAll	:=	$(EGenUtilitiesTargetModifier)all
EGenUtilitiesClean	:=	$(EGenUtilitiesTargetModifier)clean

#
# Automatically track dependencies
#
$(EGenUtilities_OBJ)/%.d : $(EGenUtilities_SRC)/%.cpp
	@set -e; rm -f $@; \
	(cd $(EGenUtilities_PRJ); \
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) ../src/$(notdir $<) \
		> ../obj/$(notdir $@).$$$$; \
	); \
	sed 's,\($(basename $(notdir $*))\).o[ :]*,\1.o $(notdir $@) : ,g' \
		< $@.$$$$ > $@; \
	rm -f $@.$$$$; \
	echo -e \\t$$\(CXX\) -c $$\(CPPFLAGS\) $$\(CXXFLAGS\) \
		$$\< -o $$\(EGenUtilities_OBJ\)/\$$\@ >> $@

#
# Default goal
#
$(EGenUtilitiesAll)	:	$(EGenUtilitiesLib)

#
# Library targets
#
EGenUtilitiesLib	:	$(EGenUtilitiesLib)

$(EGenUtilitiesLib)	:	$(EGenUtilitiesObjsNames)
	$(AR) $(ARFLAGS) $(EGenUtilitiesLib) $(EGenUtilitiesObjs)

#
# Utility targets
#
$(EGenUtilitiesClean) :
	$(RM) $(EGenUtilitiesDeps); \
	$(RM) $(EGenUtilitiesObjs); \
	$(RM) $(EGenUtilitiesLib)

#
# Dependency and object targets
#
include $(EGenUtilitiesDeps)

endif #EGEN_UTILITIES_MAKEFILE_INCLUDED
